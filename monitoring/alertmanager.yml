global:
  smtp_smarthost: 'localhost:587'
  smtp_from: 'alerts@learning-assistant.com'
  smtp_auth_username: 'alerts@learning-assistant.com'
  smtp_auth_password: 'your-smtp-password'

# The directory from which notification templates are read.
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# The root route on which each alert enters.
route:
  # The labels by which incoming alerts are grouped together.
  group_by: ['alertname', 'severity']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  group_wait: 10s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 10s

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 1h

  # A default receiver
  receiver: web.hook

  # All the above attributes are inherited by all child routes and can be
  # overwritten on each.
  routes:
    - match:
        severity: critical
      receiver: critical-alerts
      group_wait: 0s
      group_interval: 5m
      repeat_interval: 30m

    - match:
        severity: warning
      receiver: warning-alerts
      group_wait: 30s
      group_interval: 10m
      repeat_interval: 2h

    - match:
        alertname: ServiceDown
      receiver: service-down-alerts
      group_wait: 0s
      repeat_interval: 5m

    - match:
        service: learning-assistant
      receiver: learning-assistant-alerts

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'dev', 'instance']

receivers:
  - name: 'web.hook'
    webhook_configs:
      - url: 'http://127.0.0.1:5001/'

  - name: 'critical-alerts'
    email_configs:
      - to: 'ops-team@learning-assistant.com'
        subject: 'CRITICAL: {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Instance: {{ .Labels.instance }}
          Severity: {{ .Labels.severity }}
          {{ end }}
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#critical-alerts'
        title: 'CRITICAL Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        color: 'danger'
    webhook_configs:
      - url: 'http://your-webhook-url/critical'
        send_resolved: true

  - name: 'warning-alerts'
    email_configs:
      - to: 'ops-team@learning-assistant.com'
        subject: 'WARNING: {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Instance: {{ .Labels.instance }}
          Severity: {{ .Labels.severity }}
          {{ end }}
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#warning-alerts'
        title: 'Warning Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        color: 'warning'

  - name: 'service-down-alerts'
    email_configs:
      - to: 'ops-team@learning-assistant.com'
        subject: 'SERVICE DOWN: {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        body: |
          URGENT: Service is down!
          
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Instance: {{ .Labels.instance }}
          Time: {{ .StartsAt }}
          {{ end }}
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#critical-alerts'
        title: 'SERVICE DOWN'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        color: 'danger'
    webhook_configs:
      - url: 'http://your-pagerduty-webhook-url'
        send_resolved: true

  - name: 'learning-assistant-alerts'
    email_configs:
      - to: 'dev-team@learning-assistant.com'
        subject: 'Learning Assistant Alert: {{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'
        body: |
          {{ range .Alerts }}
          Alert: {{ .Annotations.summary }}
          Description: {{ .Annotations.description }}
          Service: {{ .Labels.service }}
          Severity: {{ .Labels.severity }}
          {{ end }}
    slack_configs:
      - api_url: 'https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK'
        channel: '#learning-assistant'
        title: 'Learning Assistant Alert'
        text: '{{ range .Alerts }}{{ .Annotations.summary }}{{ end }}'