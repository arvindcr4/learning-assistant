# Render.com Production Deployment Configuration
# This file defines the infrastructure for the Learning Assistant application
# including web service, PostgreSQL database, and Redis cache

services:
  # Primary Web Service - Next.js Application
  - type: web
    name: learning-assistant
    env: docker
    dockerfilePath: ./Dockerfile.render
    dockerContext: .
    
    # Service Configuration
    plan: starter  # Change to 'standard' or 'pro' for production workloads
    region: oregon  # Available: oregon, frankfurt, singapore
    branch: main
    
    # Auto-deploy settings
    autoDeploy: true
    
    # Health Check Configuration
    healthCheckPath: /api/health
    
    # Resource Limits and Scaling
    numInstances: 1  # Set to 2+ for high availability
    
    # Build Configuration
    buildCommand: "echo 'Docker build handles this'"
    startCommand: "echo 'Docker handles this'"
    
    # Networking and Domains
    domains:
      - learning-assistant.onrender.com
    
    # Environment Variables
    envVars:
      # Core Application Settings
      - key: NODE_ENV
        value: production
      - key: PORT
        value: '3000'
      - key: NEXT_TELEMETRY_DISABLED
        value: '1'
      
      # Database Configuration
      - key: DATABASE_URL
        fromDatabase:
          name: learning-assistant-db
          property: connectionString
      - key: DB_HOST
        fromDatabase:
          name: learning-assistant-db
          property: host
      - key: DB_PORT
        fromDatabase:
          name: learning-assistant-db
          property: port
      - key: DB_NAME
        fromDatabase:
          name: learning-assistant-db
          property: database
      - key: DB_USER
        fromDatabase:
          name: learning-assistant-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: learning-assistant-db
          property: password
      - key: DB_SSL
        value: 'true'
      - key: DB_MAX_CONNECTIONS
        value: '10'
      - key: DB_IDLE_TIMEOUT
        value: '30000'
      - key: DB_CONNECTION_TIMEOUT
        value: '10000'
      
      # Redis Configuration
      - key: REDIS_URL
        fromService:
          type: redis
          name: learning-assistant-redis
          property: connectionString
      - key: REDIS_HOST
        fromService:
          type: redis
          name: learning-assistant-redis
          property: host
      - key: REDIS_PORT
        fromService:
          type: redis
          name: learning-assistant-redis
          property: port
      - key: REDIS_PASSWORD
        fromService:
          type: redis
          name: learning-assistant-redis
          property: password
      
      # Authentication & Security
      - key: BETTER_AUTH_SECRET
        generateValue: true
      - key: BETTER_AUTH_URL
        value: https://learning-assistant.onrender.com
      - key: SESSION_SECRET
        generateValue: true
      - key: ENCRYPTION_KEY
        generateValue: true
      
      # Application URLs
      - key: NEXT_PUBLIC_API_URL
        value: https://learning-assistant.onrender.com
      - key: NEXT_PUBLIC_APP_URL
        value: https://learning-assistant.onrender.com
      - key: NEXT_PUBLIC_WS_URL
        value: wss://learning-assistant.onrender.com
      
      # Feature Flags
      - key: FEATURE_ANALYTICS_ENABLED
        value: 'true'
      - key: FEATURE_RECOMMENDATIONS_ENABLED
        value: 'true'
      - key: FEATURE_CHAT_ENABLED
        value: 'true'
      - key: FEATURE_REALTIME_ENABLED
        value: 'true'
      - key: FEATURE_OFFLINE_ENABLED
        value: 'true'
      
      # Performance & Caching
      - key: ENABLE_REDIS_CACHE
        value: 'true'
      - key: CACHE_TTL
        value: '1800'  # 30 minutes
      - key: STATIC_CACHE_MAX_AGE
        value: '86400'  # 24 hours
      
      # Logging & Monitoring
      - key: LOG_LEVEL
        value: 'info'
      - key: ENABLE_PERFORMANCE_MONITORING
        value: 'true'
      - key: ENABLE_ERROR_REPORTING
        value: 'true'
      - key: METRICS_ENABLED
        value: 'true'
      
      # Internationalization
      - key: DEFAULT_LOCALE
        value: 'en'
      - key: SUPPORTED_LOCALES
        value: 'en,es,fr,de,ja,ar'
      
      # Email Configuration (if needed)
      - key: SMTP_HOST
        value: smtp.gmail.com
      - key: SMTP_PORT
        value: '587'
      - key: SMTP_SECURE
        value: 'false'
      - key: SMTP_USER
        sync: false  # Set manually in dashboard
      - key: SMTP_PASSWORD
        sync: false  # Set manually in dashboard
      
      # AI/ML Configuration
      - key: OPENAI_API_KEY
        sync: false  # Set manually in dashboard
      - key: AI_MODEL_NAME
        value: 'gpt-4'
      - key: AI_MAX_TOKENS
        value: '2048'
      - key: AI_TEMPERATURE
        value: '0.7'
      
      # File Upload Configuration
      - key: MAX_FILE_SIZE
        value: '10485760'  # 10MB
      - key: UPLOAD_DIR
        value: '/tmp/uploads'
      
      # Rate Limiting
      - key: RATE_LIMIT_ENABLED
        value: 'true'
      - key: RATE_LIMIT_WINDOW
        value: '900000'  # 15 minutes
      - key: RATE_LIMIT_MAX_REQUESTS
        value: '100'

  # Redis Cache Service
  - type: redis
    name: learning-assistant-redis
    plan: starter  # Change to 'standard' or 'pro' for production
    region: oregon
    
    # Redis Configuration
    maxmemoryPolicy: allkeys-lru
    
    # Persistence
    persistence: true

  # Static Site Service (for assets/CDN)
  - type: static
    name: learning-assistant-static
    buildCommand: "npm run build && npm run export"
    staticPublishPath: ./out
    
    # Custom Headers for Static Assets
    headers:
      - path: "/*"
        headers:
          - key: "Cache-Control"
            value: "public, max-age=86400"  # 24 hours
          - key: "X-Frame-Options"
            value: "DENY"
          - key: "X-Content-Type-Options"
            value: "nosniff"
          - key: "Referrer-Policy"
            value: "strict-origin-when-cross-origin"
    
    # Custom Routes
    routes:
      - src: "/(.*)"
        dest: "/$1"
        headers:
          - key: "Cache-Control"
            value: "public, max-age=0, must-revalidate"
    
    # Environment Variables for Static Build
    envVars:
      - key: NODE_ENV
        value: production
      - key: NEXT_TELEMETRY_DISABLED
        value: '1'

# PostgreSQL Database Service
databases:
  - name: learning-assistant-db
    databaseName: learning_assistant
    user: learning_assistant_user
    plan: starter  # Change to 'standard' or 'pro' for production
    region: oregon
    
    # Database Configuration
    postgresqlVersion: '15'
    
    # Connection Settings
    maxConnections: 20
    
    # Backup Configuration
    backupSchedule: "0 2 * * *"  # Daily at 2 AM
    backupRetentionDays: 7
