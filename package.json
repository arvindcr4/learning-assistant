{
  "name": "learning-assistant",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "dev:fast": "next dev --turbopack --experimental-https",
    "dev:profile": "next dev --turbopack --experimental-profiling",
    "build": "SKIP_DB_CONNECTION=true next build",
    "build:production": "SKIP_ENV_VALIDATION=true SKIP_DB_CONNECTION=true next build",
    "build:fast": "next build --experimental-build-mode=compile",
    "build:profile": "next build --profile",
    "build:debug": "next build --debug",
    "build:trace": "next build --experimental-trace",
    "build:monitor": "node scripts/build-performance-monitor.js full",
    "build:optimized": "npm run build:monitor && npm run build:production",
    "start": "next start",
    "lint": "next lint",
    "lint:fix": "next lint --fix",
    "type-check": "tsc --noEmit",
    "type-check:dev": "tsc --noEmit --project tsconfig.dev.json",
    "type-check:fast": "tsc --noEmit --skipLibCheck --incremental",
    "type-check:strict": "tsc --noEmit --strict",
    "type-check:watch": "tsc --noEmit --watch",
    "type-check:profile": "tsc --noEmit --generateTrace trace --extendedDiagnostics",
    "type-coverage": "type-coverage --strict --at-least 95",
    "clean": "rm -rf .next out",
    "clean:cache": "rm -rf .next/cache .jest-cache node_modules/.cache",
    "clean:all": "npm run clean && npm run clean:cache",
    "clean:build": "rm -rf .next out dist build",
    "analyze": "cross-env ANALYZE=true npm run build",
    "analyze:server": "cross-env BUNDLE_ANALYZE=server npm run build",
    "analyze:browser": "cross-env BUNDLE_ANALYZE=browser npm run build",
    "lighthouse": "lighthouse http://localhost:3000 --output json --output html --output-path ./lighthouse-report",
    "lighthouse:ci": "lighthouse http://localhost:3000 --output json --quiet --chrome-flags='--headless --no-sandbox' --output-path ./lighthouse-ci-report.json",
    "perf:audit": "npm run lighthouse && npm run analyze",
    "perf:test": "npm run test:performance",
    "perf:build": "npm run build:monitor",
    "perf:typescript": "node scripts/build-performance-monitor.js typescript",
    "perf:cache": "node scripts/build-performance-monitor.js cache",
    "perf:bundle": "node scripts/build-performance-monitor.js bundle",
    "db:migrate": "node scripts/migrate.js",
    "db:seed": "node scripts/seed.js",
    "db:reset": "node scripts/reset.js",
    "db:status": "node scripts/status.js",
    "secrets:generate": "node scripts/generate-secrets.js generate",
    "secrets:generate:save": "node scripts/generate-secrets.js generate --save",
    "secrets:validate": "node scripts/generate-secrets.js validate",
    "deploy:validate": "node scripts/validate-deployment.js",
    "deploy:validate:env": "node scripts/validate-deployment.js env",
    "deploy:validate:secrets": "node scripts/validate-deployment.js secrets",
    "deploy:validate:db": "node scripts/validate-deployment.js database",
    "deploy:summary": "node scripts/deployment-summary.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "ENABLE_PERFORMANCE_MONITORING=true jest --coverage --cache --cacheDirectory=.jest-cache",
    "test:ci": "CI=true jest --ci --coverage --watchAll=false --maxWorkers=2 --passWithNoTests --cache --cacheDirectory=.jest-cache",
    "test:unit": "jest --testPathPattern=__tests__/unit --cache --cacheDirectory=.jest-cache",
    "test:unit:watch": "jest --testPathPattern=__tests__/unit --watch --cache --cacheDirectory=.jest-cache",
    "test:unit:parallel": "jest --testPathPattern=__tests__/unit --maxWorkers=50% --cache --cacheDirectory=.jest-cache",
    "test:unit:shard1": "JEST_SHARD=1 jest --testPathPattern=__tests__/unit --shard=1/4 --cache --cacheDirectory=.jest-cache",
    "test:unit:shard2": "JEST_SHARD=2 jest --testPathPattern=__tests__/unit --shard=2/4 --cache --cacheDirectory=.jest-cache",
    "test:unit:shard3": "JEST_SHARD=3 jest --testPathPattern=__tests__/unit --shard=3/4 --cache --cacheDirectory=.jest-cache",
    "test:unit:shard4": "JEST_SHARD=4 jest --testPathPattern=__tests__/unit --shard=4/4 --cache --cacheDirectory=.jest-cache",
    "test:integration": "SETUP_TEST_DB=true jest --testPathPattern=__tests__/integration --maxWorkers=1 --cache --cacheDirectory=.jest-cache",
    "test:integration:watch": "SETUP_TEST_DB=true jest --testPathPattern=__tests__/integration --watch --maxWorkers=1 --cache --cacheDirectory=.jest-cache",
    "test:integration:shard1": "SETUP_TEST_DB=true JEST_SHARD=1 jest --testPathPattern=__tests__/integration --shard=1/2 --maxWorkers=1 --cache --cacheDirectory=.jest-cache",
    "test:integration:shard2": "SETUP_TEST_DB=true JEST_SHARD=2 jest --testPathPattern=__tests__/integration --shard=2/2 --maxWorkers=1 --cache --cacheDirectory=.jest-cache",
    "test:e2e": "playwright test",
    "test:e2e:headed": "playwright test --headed",
    "test:e2e:debug": "playwright test --debug",
    "test:e2e:parallel": "playwright test --workers=4",
    "test:e2e:shard1": "playwright test --shard=1/2",
    "test:e2e:shard2": "playwright test --shard=2/2",
    "test:accessibility": "jest --testPathPattern=__tests__/accessibility --cache --cacheDirectory=.jest-cache",
    "test:accessibility:watch": "jest --testPathPattern=__tests__/accessibility --watch --cache --cacheDirectory=.jest-cache",
    "test:performance": "ENABLE_PERFORMANCE_MONITORING=true jest --testPathPattern=__tests__/performance --cache --cacheDirectory=.jest-cache",
    "test:performance:watch": "ENABLE_PERFORMANCE_MONITORING=true jest --testPathPattern=__tests__/performance --watch --cache --cacheDirectory=.jest-cache",
    "test:performance:benchmark": "ENABLE_PERFORMANCE_MONITORING=true jest --testPathPattern=__tests__/performance --testNamePattern=benchmark",
    "test:components": "jest --testPathPattern=__tests__/components --cache --cacheDirectory=.jest-cache",
    "test:quick": "jest --passWithNoTests --testPathIgnorePatterns=__tests__/e2e --testTimeout=10000 --maxWorkers=50% --cache --cacheDirectory=.jest-cache",
    "test:debug": "node --inspect-brk node_modules/.bin/jest --runInBand --no-cache",
    "test:coverage:ci": "CI=true jest --ci --coverage --watchAll=false --coverageReporters=text-lcov --cache --cacheDirectory=.jest-cache",
    "test:coverage:html": "jest --coverage --coverageReporters=html --cache --cacheDirectory=.jest-cache",
    "test:coverage:detailed": "ENABLE_PERFORMANCE_MONITORING=true GENERATE_PERF_REPORT=true jest --coverage --coverageReporters=html,json-summary,text --cache --cacheDirectory=.jest-cache",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:accessibility && npm run test:performance",
    "test:all:parallel": "concurrently \"npm run test:unit:parallel\" \"npm run test:accessibility\" \"npm run test:performance\"",
    "test:all:sharded": "concurrently \"npm run test:unit:shard1\" \"npm run test:unit:shard2\" \"npm run test:unit:shard3\" \"npm run test:unit:shard4\" \"npm run test:integration:shard1\" \"npm run test:integration:shard2\"",
    "test:changed": "jest --changedSince=HEAD --cache --cacheDirectory=.jest-cache",
    "test:related": "jest --findRelatedTests --cache --cacheDirectory=.jest-cache",
    "test:clear-cache": "jest --clearCache && rm -rf .jest-cache",
    "test:performance-monitor": "node scripts/test-performance-monitor.js",
    "test:benchmark": "npm run test:performance:benchmark && npm run test:performance-monitor",
    "test:ci-optimized": "ENABLE_PERFORMANCE_MONITORING=true GENERATE_PERF_REPORT=true npm run test:ci && npm run test:performance-monitor",
    "translations:extract": "ts-node scripts/translation-tools.ts extract",
    "translations:stats": "ts-node scripts/translation-tools.ts stats",
    "translations:validate": "ts-node scripts/translation-tools.ts validate",
    "translations:export": "ts-node scripts/translation-tools.ts export",
    "translations:report": "ts-node scripts/translation-tools.ts report",
    "translations:missing": "ts-node scripts/translation-tools.ts missing",
    "translations:search": "ts-node scripts/translation-tools.ts search",
    "i18n:extract": "node scripts/i18n-automation.js extract",
    "i18n:validate": "node scripts/i18n-automation.js validate",
    "i18n:auto-translate": "node scripts/i18n-automation.js auto-translate",
    "i18n:report": "node scripts/i18n-automation.js report",
    "i18n:full": "node scripts/i18n-automation.js full",
    "prepare": "husky",
    "quality:analyze": "node scripts/code-quality-analyzer.js",
    "quality:check": "npm run lint && npm run type-check && npm run quality:analyze",
    "quality:fix": "npm run lint:fix && npm run quality:analyze",
    "docs:analyze": "node scripts/jsdoc-templates.js analyze",
    "docs:templates": "node scripts/jsdoc-templates.js templates",
    "security:audit": "npm audit --audit-level moderate",
    "ci:quality": "npm run lint && npm run type-check:strict && npm run test:coverage:ci && npm run quality:analyze",
    "ci:build": "npm run clean:all && npm run build:optimized",
    "ci:build:fast": "npm run clean:cache && npm run build:fast",
    "precommit": "npm run type-check:fast && npm run lint:fix",
    "prebuild": "npm run clean:cache",
    "postbuild": "npm run perf:bundle",
    "optimize": "npm run clean:all && npm run build:optimized && npm run perf:audit",
    "optimize:dev": "npm run clean:cache && npm run type-check:dev && npm run perf:typescript"
  },
  "dependencies": {
    "@hookform/resolvers": "^5.1.1",
    "@opentelemetry/exporter-otlp-http": "^0.26.0",
    "@opentelemetry/instrumentation": "^0.202.0",
    "@opentelemetry/resources": "^2.0.1",
    "@opentelemetry/sdk-node": "^0.202.0",
    "@opentelemetry/sdk-trace-node": "^2.0.1",
    "@opentelemetry/semantic-conventions": "^1.34.0",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-dropdown-menu": "^2.1.15",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-slider": "^1.3.5",
    "@radix-ui/react-switch": "^1.2.5",
    "@radix-ui/react-tabs": "^1.1.12",
    "@radix-ui/react-toast": "^1.2.14",
    "@sentry/nextjs": "^8.46.0",
    "@supabase/auth-js": "^2.70.0",
    "@supabase/realtime-js": "^2.12.0",
    "@supabase/supabase-js": "^2.50.3",
    "@tambo-ai/react": "^0.37.1",
    "@tambo-ai/typescript-sdk": "^0.61.0",
    "@types/dompurify": "^3.0.5",
    "@types/jsdom": "^21.1.7",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/lodash": "^4.17.20",
    "@types/redis": "^4.0.11",
    "axios": "^1.6.0",
    "bcryptjs": "^3.0.2",
    "better-auth": "^1.2.12",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "critters": "^0.0.23",
    "date-fns": "^2.30.0",
    "dompurify": "^3.2.6",
    "express-rate-limit": "^7.5.1",
    "framer-motion": "^12.23.0",
    "hot-shots": "^10.2.0",
    "ioredis": "^5.3.2",
    "isomorphic-dompurify": "^2.26.0",
    "jsdom": "^26.1.0",
    "jsonwebtoken": "^9.0.2",
    "lodash": "^4.17.21",
    "lucide-react": "^0.400.0",
    "lz-string": "^1.5.0",
    "motion": "^12.23.0",
    "newrelic": "^12.6.0",
    "next": "15.3.5",
    "next-pwa": "^5.6.0",
    "node-cron": "^4.2.0",
    "node-mocks-http": "^1.17.2",
    "nodemailer": "^6.9.15",
    "pg": "^8.16.3",
    "prom-client": "^15.1.3",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hook-form": "^7.60.0",
    "react-markdown": "^9.0.0",
    "recharts": "^3.0.2",
    "redis": "^4.6.0",
    "remark-gfm": "^4.0.0",
    "resend": "^4.6.0",
    "sharp": "^0.33.5",
    "swagger-ui-react": "^5.26.2",
    "tailwind-merge": "^3.3.1",
    "uuid": "^9.0.0",
    "web-vitals": "^3.5.2",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "winston-elasticsearch": "^0.17.4",
    "winston-loggly-bulk": "^3.2.1",
    "winston-logzio": "^5.1.6",
    "winston-papertrail": "^1.0.5",
    "winston-syslog": "^2.7.0",
    "winston-transport": "^4.8.0",
    "workbox-webpack-plugin": "^7.1.0",
    "zod": "^3.25.75",
    "tailwindcss": "^3.4.15",
    "autoprefixer": "^10.4.21"
  },
  "engines": {
    "node": ">=20.0.0"
  },
  "devDependencies": {
    "@axe-core/react": "^4.10.2",
    "@babel/core": "^7.23.5",
    "@babel/preset-env": "^7.23.5",
    "@babel/preset-react": "^7.23.3",
    "@babel/preset-typescript": "^7.23.3",
    "@eslint/eslintrc": "^3.3.1",
    "@faker-js/faker": "^8.4.1",
    "@flydotio/dockerfile": "^0.7.10",
    "@next/bundle-analyzer": "^15.3.5",
    "@playwright/test": "^1.40.1",
    "@svgr/webpack": "^8.1.0",
    "@swc/core": "^1.3.100",
    "@swc/jest": "^0.2.29",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^14.1.2",
    "@testing-library/user-event": "^14.5.1",
    "@types/bcryptjs": "^2.4.6",
    "@types/jest": "^29.5.8",
    "@types/jest-axe": "^3.5.9",
    "@types/node": "^20",
    "@types/nodemailer": "^6.4.15",
    "@types/pg": "^8.15.4",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/uuid": "^9.0.0",
    "@typescript-eslint/eslint-plugin": "^8.35.1",
    "@typescript-eslint/parser": "^8.35.1",
    "assert": "^2.0.0",
    "axe-core": "^4.10.3",
    "babel-jest": "^29.7.0",
    "browserify-zlib": "^0.2.0",
    "buffer": "^6.0.3",
    "compression-webpack-plugin": "^11.0.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "crypto-browserify": "^3.12.0",
    "eslint": "^9.30.1",
    "eslint-config-next": "^15.3.5",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jsdoc": "^51.3.4",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-prettier": "^5.5.1",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "jest": "^29.7.0",
    "jest-axe": "^8.0.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-html-reporter": "^3.10.2",
    "jest-junit": "^16.0.0",
    "jest-performance-testing": "^1.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "lighthouse": "^12.0.0",
    "lint-staged": "^16.1.2",
    "msw": "^2.10.3",
    "null-loader": "^4.0.1",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "prettier": "^3.6.2",
    "prettier-plugin-tailwindcss": "^0.6.13",
    "querystring-es3": "^0.2.1",
    "stream-browserify": "^3.0.0",
    "ts-node": "^10.9.2",
    "typescript": "^5",
    "url": "^0.11.3",
    "util": "^0.12.5",
    "vm-browserify": "^1.1.2",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{ts,tsx}": [
      "tsc --noEmit --skipLibCheck"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "sideEffects": false
}
