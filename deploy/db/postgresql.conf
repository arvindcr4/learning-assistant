# PostgreSQL Configuration for Learning Assistant Production Environment
# Optimized for high-performance learning data processing

# ==========================================
# CONNECTION AND AUTHENTICATION
# ==========================================

# Connection settings
listen_addresses = '*'                  # Listen on all interfaces
port = 5432                            # Standard PostgreSQL port
max_connections = 200                  # Increased for connection pooling
superuser_reserved_connections = 5     # Reserved connections for superuser

# Authentication
authentication_timeout = 1min         # Timeout for authentication
password_encryption = scram-sha-256    # Strong password encryption

# SSL Settings
ssl = on                              # Enable SSL
ssl_cert_file = 'server.crt'        # SSL certificate
ssl_key_file = 'server.key'         # SSL private key
ssl_ca_file = 'ca.crt'              # Certificate authority
ssl_prefer_server_ciphers = on       # Prefer server cipher order
ssl_ciphers = 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256'

# ==========================================
# RESOURCE USAGE - MEMORY
# ==========================================

# Memory settings optimized for learning data processing
shared_buffers = 2GB                  # 25% of total RAM (assuming 8GB system)
effective_cache_size = 6GB            # 75% of total RAM
work_mem = 32MB                       # Memory for sorts and hash joins
maintenance_work_mem = 512MB          # Memory for maintenance operations
autovacuum_work_mem = 512MB           # Memory for autovacuum

# Temporary file settings
temp_buffers = 32MB                   # Temporary buffer size
max_files_per_process = 1000          # Maximum open files per process

# ==========================================
# RESOURCE USAGE - KERNEL RESOURCES
# ==========================================

# Shared memory and semaphores
max_locks_per_transaction = 128       # Increased for complex transactions
max_pred_locks_per_transaction = 128  # For serializable transactions
max_pred_locks_per_relation = 512     # Per relation predicate locks
max_pred_locks_per_page = 4           # Per page predicate locks

# Background processes
max_worker_processes = 16             # Maximum background worker processes
max_parallel_workers = 8              # Maximum parallel workers total
max_parallel_workers_per_gather = 4   # Parallel workers per gather node
max_parallel_maintenance_workers = 4  # Parallel maintenance workers

# ==========================================
# WRITE AHEAD LOG (WAL)
# ==========================================

# WAL settings for replication and performance
wal_level = replica                   # Enable replication
wal_buffers = 64MB                    # WAL buffer size
wal_compression = on                  # Compress WAL records
wal_init_zero = off                   # Don't zero-fill new WAL files
wal_recycle = off                     # Don't recycle WAL files

# Checkpoints
checkpoint_timeout = 15min            # Checkpoint frequency
checkpoint_completion_target = 0.9    # Spread checkpoint over 90% of interval
checkpoint_warning = 30s              # Warn if checkpoints are too frequent

# WAL archiving for backups and replication
archive_mode = on                     # Enable WAL archiving
archive_command = 'cp %p /var/lib/postgresql/archive/%f'
archive_timeout = 1800s               # Force archive every 30 minutes

# Replication settings
max_wal_senders = 5                   # Maximum WAL sender processes
wal_keep_size = 2GB                   # Amount of WAL to keep for replicas
wal_sender_timeout = 60s              # Timeout for WAL sender
hot_standby = on                      # Enable hot standby
hot_standby_feedback = on             # Send feedback from standby

# ==========================================
# QUERY TUNING
# ==========================================

# Query planner settings
random_page_cost = 1.1                # SSD-optimized random page cost
seq_page_cost = 1.0                   # Sequential page cost
cpu_tuple_cost = 0.01                 # CPU cost per tuple
cpu_index_tuple_cost = 0.005          # CPU cost per index tuple
cpu_operator_cost = 0.0025            # CPU cost per operator

# Join and sorting
enable_hashjoin = on                  # Enable hash joins
enable_mergejoin = on                 # Enable merge joins
enable_nestloop = on                  # Enable nested loop joins
enable_sort = on                      # Enable sorting
enable_material = on                  # Enable materialization

# Query optimization
default_statistics_target = 1000      # Increased statistics for better plans
constraint_exclusion = partition      # Enable partition pruning
enable_partition_pruning = on         # Partition pruning
enable_partitionwise_join = on        # Partition-wise joins
enable_partitionwise_aggregate = on   # Partition-wise aggregates

# Parallel query settings
force_parallel_mode = off             # Don't force parallel mode
min_parallel_table_scan_size = 8MB    # Minimum size for parallel scan
min_parallel_index_scan_size = 512kB  # Minimum size for parallel index scan
parallel_tuple_cost = 0.1             # Cost of tuple communication
parallel_setup_cost = 1000.0          # Cost of setting up parallel workers

# ==========================================
# ERROR REPORTING AND LOGGING
# ==========================================

# Logging settings for monitoring and debugging
log_destination = 'stderr,csvlog'     # Log to stderr and CSV
logging_collector = on                # Enable log collector
log_directory = '/var/log/postgresql' # Log directory
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_file_mode = 0640                  # Log file permissions
log_rotation_age = 1d                 # Rotate logs daily
log_rotation_size = 100MB             # Rotate when log reaches 100MB
log_truncate_on_rotation = on         # Truncate log on rotation

# What to log
log_min_messages = warning            # Minimum severity to log
log_min_error_statement = error       # Log statements causing errors
log_min_duration_statement = 1000     # Log slow queries (1 second)
log_checkpoints = on                  # Log checkpoint activity
log_connections = on                  # Log new connections
log_disconnections = on               # Log disconnections
log_lock_waits = on                   # Log lock waits
log_temp_files = 10MB                 # Log large temporary files
log_autovacuum_min_duration = 1000    # Log autovacuum activity

# Statement logging
log_statement = 'ddl'                 # Log DDL statements
log_replication_commands = on         # Log replication commands
log_line_prefix = '%t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h '

# CSV logging for analysis
log_destination = 'csvlog'
log_min_duration_statement = 0        # Log all statements to CSV

# ==========================================
# RUNTIME STATISTICS
# ==========================================

# Statistics collection
track_activities = on                 # Track running statements
track_counts = on                     # Track row counts
track_io_timing = on                  # Track I/O timing
track_functions = all                 # Track function calls
track_commit_timestamp = on           # Track commit timestamps

# Query statistics
compute_query_id = on                 # Enable query ID computation
log_parser_stats = off                # Don't log parser stats
log_planner_stats = off               # Don't log planner stats
log_executor_stats = off              # Don't log executor stats
log_statement_stats = off             # Don't log statement stats

# ==========================================
# AUTOVACUUM
# ==========================================

# Autovacuum settings for optimal maintenance
autovacuum = on                       # Enable autovacuum
autovacuum_max_workers = 4            # Maximum autovacuum workers
autovacuum_naptime = 30s              # Time between autovacuum runs
autovacuum_vacuum_threshold = 50      # Minimum tuples before vacuum
autovacuum_vacuum_scale_factor = 0.1  # Fraction of table for vacuum
autovacuum_analyze_threshold = 50     # Minimum tuples before analyze
autovacuum_analyze_scale_factor = 0.05 # Fraction of table for analyze
autovacuum_freeze_max_age = 200000000 # Maximum age before forced vacuum
autovacuum_multixact_freeze_max_age = 400000000 # Multixact freeze age
autovacuum_vacuum_cost_delay = 10ms   # Cost delay for autovacuum
autovacuum_vacuum_cost_limit = 2000   # Cost limit for autovacuum

# ==========================================
# CLIENT CONNECTION DEFAULTS
# ==========================================

# Statement behavior
search_path = '"$user", public'       # Schema search path
default_tablespace = ''               # Default tablespace
temp_tablespaces = ''                 # Temporary tablespaces

# Locale and formatting
datestyle = 'iso, mdy'               # Date style
timezone = 'UTC'                     # Time zone
lc_messages = 'en_US.UTF-8'          # Message language
lc_monetary = 'en_US.UTF-8'          # Monetary formatting
lc_numeric = 'en_US.UTF-8'           # Numeric formatting
lc_time = 'en_US.UTF-8'              # Time formatting
default_text_search_config = 'pg_catalog.english'

# Transaction isolation
default_transaction_isolation = 'read committed'
default_transaction_read_only = off
default_transaction_deferrable = off

# Statement timeout and locks
statement_timeout = 60s               # Statement timeout
lock_timeout = 30s                    # Lock acquisition timeout
idle_in_transaction_session_timeout = 300s # Idle transaction timeout

# ==========================================
# LOCK MANAGEMENT
# ==========================================

# Deadlock handling
deadlock_timeout = 1s                # Time to wait before deadlock check
max_locks_per_transaction = 256       # Increased for complex operations

# ==========================================
# VERSION AND PLATFORM COMPATIBILITY
# ==========================================

# Backward compatibility
escape_string_warning = on            # Warn about backslash escapes
standard_conforming_strings = on      # Standard string literals

# Dynamic loading
dynamic_library_path = '$libdir'      # Library search path
local_preload_libraries = ''          # Local preload libraries
session_preload_libraries = ''        # Session preload libraries

# ==========================================
# CUSTOM SETTINGS FOR LEARNING ASSISTANT
# ==========================================

# Application-specific settings
shared_preload_libraries = 'pg_stat_statements,auto_explain,pg_prewarm'

# pg_stat_statements configuration
pg_stat_statements.max = 10000        # Track top 10,000 statements
pg_stat_statements.track = all        # Track all statements
pg_stat_statements.track_utility = on # Track utility statements
pg_stat_statements.save = on          # Save across restarts

# auto_explain configuration
auto_explain.log_min_duration = 5s    # Explain queries > 5 seconds
auto_explain.log_analyze = on         # Include actual times
auto_explain.log_buffers = on         # Include buffer usage
auto_explain.log_triggers = on        # Include trigger times
auto_explain.log_verbose = on         # Verbose output
auto_explain.log_nested_statements = on # Explain nested statements

# Connection pooling support
max_prepared_transactions = 100       # Support for 2PC

# Large object support
lo_compat_privileges = off            # Use new privilege system

# ==========================================
# PERFORMANCE MONITORING
# ==========================================

# Enable additional monitoring extensions
# These should be installed separately:
# - pg_stat_statements (query statistics)
# - pg_buffercache (buffer cache analysis)
# - pg_prewarm (buffer prewarming)
# - auto_explain (automatic query explanation)

# Custom monitoring settings
log_destination = 'stderr,csvlog'
log_collector = on
log_directory = '/var/log/postgresql'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_min_duration_statement = 1000     # Log queries > 1 second

# ==========================================
# SECURITY SETTINGS
# ==========================================

# Row-level security
row_security = on                     # Enable row-level security

# Password settings
password_encryption = scram-sha-256   # Strong password encryption
ssl_min_protocol_version = 'TLSv1.2'  # Minimum TLS version
ssl_max_protocol_version = ''         # Maximum TLS version (latest)

# ==========================================
# BACKUP AND RECOVERY
# ==========================================

# Point-in-time recovery settings
restore_command = ''                  # Command to restore archived WAL
archive_cleanup_command = ''          # Command to clean up archive
recovery_end_command = ''             # Command to run at end of recovery

# ==========================================
# EXTENSIONS AND MODULES
# ==========================================

# Preload libraries for performance and monitoring
shared_preload_libraries = 'pg_stat_statements,auto_explain,pg_prewarm'

# Enable required extensions
# These need to be installed in the database:
# CREATE EXTENSION IF NOT EXISTS pg_stat_statements;
# CREATE EXTENSION IF NOT EXISTS auto_explain;
# CREATE EXTENSION IF NOT EXISTS pg_prewarm;
# CREATE EXTENSION IF NOT EXISTS pg_buffercache;

# ==========================================
# NOTES AND WARNINGS
# ==========================================

# This configuration is optimized for:
# - 8GB RAM system (adjust shared_buffers and effective_cache_size accordingly)
# - SSD storage (low random_page_cost)
# - Learning application workload (read-heavy with analytics)
# - Production environment with monitoring
# - Replication and high availability

# Before applying this configuration:
# 1. Backup your current postgresql.conf
# 2. Adjust memory settings based on your actual RAM
# 3. Ensure required extensions are installed
# 4. Test in a staging environment first
# 5. Monitor performance after applying changes

# Restart PostgreSQL after applying this configuration:
# sudo systemctl restart postgresql