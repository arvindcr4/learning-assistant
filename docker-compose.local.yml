version: '3.8'

services:
  # Learning Assistant App
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: learning-assistant-app
    environment:
      - NODE_ENV=development
      - BETTER_AUTH_SECRET=local-nginx-secret-key
      - DATABASE_URL=sqlite:./local_app.db
      - NEXT_PUBLIC_API_URL=http://localhost
      - NEXT_PUBLIC_APP_URL=http://localhost
      - FEATURE_CHAT_ENABLED=true
      - FEATURE_ANALYTICS_ENABLED=true
      - FEATURE_RECOMMENDATIONS_ENABLED=true
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: learning-assistant-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/local.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost/health',
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: PostgreSQL for full features
  postgres:
    image: postgres:15-alpine
    container_name: learning-assistant-postgres
    environment:
      POSTGRES_DB: learning_assistant_local
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: localpassword
    ports:
      - '5432:5432'
    volumes:
      - postgres_local_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: learning-assistant-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_local_data:/data
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_local_data:
  redis_local_data:
