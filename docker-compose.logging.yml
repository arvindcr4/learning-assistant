# Docker Compose logging configuration for Learning Assistant
# Use with: docker-compose -f docker-compose.yml -f docker-compose.logging.yml up

version: '3.8'

services:
  # Main application with enhanced logging
  app:
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"
        labels: "service,environment"
        env: "NODE_ENV,LOG_LEVEL,CORRELATION_ID"
    environment:
      - LOG_LEVEL=info
      - LOG_FORMAT=json
      - LOG_AGGREGATION_ENABLED=true
      - LOG_COMPRESSION_ENABLED=true
    labels:
      - "service=learning-assistant"
      - "environment=${NODE_ENV:-development}"
    depends_on:
      - fluentd
      - elasticsearch

  # Database with logging
  postgres:
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
        labels: "service,component"
    environment:
      - POSTGRES_LOG_STATEMENT=all
      - POSTGRES_LOG_MIN_DURATION_STATEMENT=1000
    labels:
      - "service=learning-assistant"
      - "component=database"

  # Redis with logging
  redis:
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
        labels: "service,component"
    labels:
      - "service=learning-assistant"
      - "component=cache"

  # Log aggregation services
  
  # Fluentd for log collection and forwarding
  fluentd:
    image: fluent/fluentd:v1.16-debian-1
    container_name: learning-assistant-fluentd
    volumes:
      - ./docker/fluentd/fluent.conf:/fluentd/etc/fluent.conf:ro
      - ./logs:/var/log/fluentd
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    environment:
      - FLUENTD_CONF=fluent.conf
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
    restart: unless-stopped

  # Elasticsearch for log storage and search
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: learning-assistant-elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
    restart: unless-stopped

  # Kibana for log visualization
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: learning-assistant-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    restart: unless-stopped

  # Grafana for metrics and logging dashboards
  grafana:
    image: grafana/grafana:10.2.0
    container_name: learning-assistant-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_INSTALL_PLUGINS=grafana-elasticsearch-datasource
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3001:3000"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: learning-assistant-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    restart: unless-stopped

  # Log shipper for external services
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: learning-assistant-logstash
    volumes:
      - ./docker/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./docker/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      - LS_JAVA_OPTS=-Xmx256m -Xms256m
    depends_on:
      - elasticsearch
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"
    restart: unless-stopped

  # Vector for high-performance log processing
  vector:
    image: timberio/vector:0.34.0-alpine
    container_name: learning-assistant-vector
    volumes:
      - ./docker/vector/vector.toml:/etc/vector/vector.toml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    environment:
      - VECTOR_CONFIG=/etc/vector/vector.toml
    ports:
      - "8686:8686"
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
    restart: unless-stopped

volumes:
  elasticsearch_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local

networks:
  default:
    name: learning-assistant-logging
    driver: bridge