# =============================================================================
# TERRAFORM VARIABLES EXAMPLE FILE
# =============================================================================
# This file contains example values for all the variables used in the
# Terraform configuration. Copy this file to terraform.tfvars and modify
# the values according to your requirements.
#
# Usage:
#   1. Copy this file: cp terraform.tfvars.example terraform.tfvars
#   2. Edit terraform.tfvars with your specific values
#   3. Run terraform commands: terraform plan, terraform apply
#
# IMPORTANT: Never commit terraform.tfvars to version control as it may
# contain sensitive information like passwords and secrets.

# =============================================================================
# GENERAL CONFIGURATION
# =============================================================================

# AWS region where you want to deploy the infrastructure
aws_region = "us-east-1"

# Environment name (dev, staging, prod)
environment = "prod"

# Application name (used for resource naming)
app_name = "learning-assistant"

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================

# VPC CIDR block
vpc_cidr = "10.0.0.0/16"

# Public subnets (for ALB) - at least 2 in different AZs
public_subnet_cidrs = ["10.0.1.0/24", "10.0.2.0/24"]

# Private subnets (for ECS tasks) - at least 2 in different AZs
private_subnet_cidrs = ["10.0.10.0/24", "10.0.20.0/24"]

# Database subnets (for RDS) - at least 2 in different AZs
database_subnet_cidrs = ["10.0.100.0/24", "10.0.200.0/24"]

# Enable NAT Gateway for outbound internet access from private subnets
# Set to false to reduce costs (ECS tasks won't be able to pull images from internet)
enable_nat_gateway = true

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL database name
db_name = "learning_assistant"

# Database username
db_username = "postgres"

# Database password - CHANGE THIS TO A SECURE PASSWORD
# Use a strong password with at least 8 characters
db_password = "your-secure-password-here"

# PostgreSQL version
db_engine_version = "15.7"

# Database instance class
# Options: db.t3.micro (free tier), db.t3.small, db.t3.medium, db.r5.large, etc.
db_instance_class = "db.t3.micro"

# Initial storage allocation (GB)
db_allocated_storage = 20

# Maximum storage allocation (GB) - enables auto-scaling
db_max_allocated_storage = 100

# Backup retention period (days)
db_backup_retention_period = 7

# Backup window (UTC) - when automated backups are performed
db_backup_window = "03:00-04:00"

# Maintenance window (UTC) - when maintenance can be performed
db_maintenance_window = "sun:04:00-sun:05:00"

# Enhanced monitoring interval (seconds)
# 0 = disabled, 1, 5, 10, 15, 30, 60 = enabled
db_monitoring_interval = 0

# Enable Performance Insights
db_performance_insights_enabled = true

# Skip final snapshot when destroying (set to false for production)
db_skip_final_snapshot = false

# Enable deletion protection (set to true for production)
db_deletion_protection = true

# =============================================================================
# ECS CONFIGURATION
# =============================================================================

# Docker image for your application
# Replace with your actual Docker image URL
# Example: "123456789012.dkr.ecr.us-east-1.amazonaws.com/learning-assistant:latest"
app_image = "your-account-id.dkr.ecr.us-east-1.amazonaws.com/learning-assistant:latest"

# Additional environment variables for the application
# These will be added to the default environment variables
app_environment_variables = [
  {
    name  = "NODE_ENV"
    value = "production"
  },
  {
    name  = "API_BASE_URL"
    value = "https://api.yourapp.com"
  },
  {
    name  = "JWT_SECRET"
    value = "your-jwt-secret-here"
  }
]

# ECS task CPU (256, 512, 1024, 2048, 4096)
# 256 = 0.25 vCPU, 512 = 0.5 vCPU, 1024 = 1 vCPU
ecs_task_cpu = 512

# ECS task memory (MB)
# Must be compatible with CPU allocation
ecs_task_memory = 1024

# Desired number of ECS service instances
ecs_service_desired_count = 2

# =============================================================================
# AUTO SCALING CONFIGURATION
# =============================================================================

# Minimum number of ECS service instances
ecs_autoscaling_min_capacity = 1

# Maximum number of ECS service instances
ecs_autoscaling_max_capacity = 10

# CPU utilization threshold for scaling (percentage)
ecs_autoscaling_cpu_threshold = 70

# Memory utilization threshold for scaling (percentage)
ecs_autoscaling_memory_threshold = 80

# =============================================================================
# LOAD BALANCER CONFIGURATION
# =============================================================================

# SSL certificate ARN for HTTPS
# Get this from AWS Certificate Manager after creating/importing your certificate
# Example: "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"
ssl_certificate_arn = ""

# Enable ALB deletion protection
alb_deletion_protection = true

# ALB access logs retention (days)
alb_log_retention_in_days = 30

# =============================================================================
# DNS CONFIGURATION (OPTIONAL)
# =============================================================================

# Your domain name (optional)
# If provided, Route 53 hosted zone will be created
# Example: "myapp.com"
domain_name = ""

# =============================================================================
# MONITORING AND LOGGING
# =============================================================================

# CloudWatch logs retention (days)
# Valid values: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653
log_retention_in_days = 30

# Email address for CloudWatch alarms (optional)
# If provided, you'll receive email notifications for alerts
alert_email = ""

# =============================================================================
# ADDITIONAL TAGS
# =============================================================================

# Additional tags to apply to all resources
additional_tags = {
  Owner       = "your-name"
  CostCenter  = "engineering"
  Department  = "IT"
  Project     = "learning-assistant"
}

# =============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# DEVELOPMENT ENVIRONMENT
# Uncomment and modify these values for development environment
# aws_region = "us-east-1"
# environment = "dev"
# app_name = "learning-assistant-dev"
# db_instance_class = "db.t3.micro"
# ecs_task_cpu = 256
# ecs_task_memory = 512
# ecs_service_desired_count = 1
# ecs_autoscaling_min_capacity = 1
# ecs_autoscaling_max_capacity = 3
# enable_nat_gateway = false  # To reduce costs
# db_deletion_protection = false
# alb_deletion_protection = false
# log_retention_in_days = 7

# STAGING ENVIRONMENT
# Uncomment and modify these values for staging environment
# aws_region = "us-east-1"
# environment = "staging"
# app_name = "learning-assistant-staging"
# db_instance_class = "db.t3.small"
# ecs_task_cpu = 512
# ecs_task_memory = 1024
# ecs_service_desired_count = 2
# ecs_autoscaling_min_capacity = 1
# ecs_autoscaling_max_capacity = 5
# enable_nat_gateway = true
# db_deletion_protection = true
# alb_deletion_protection = true
# log_retention_in_days = 14

# PRODUCTION ENVIRONMENT
# Uncomment and modify these values for production environment
# aws_region = "us-east-1"
# environment = "prod"
# app_name = "learning-assistant"
# db_instance_class = "db.r5.large"
# ecs_task_cpu = 1024
# ecs_task_memory = 2048
# ecs_service_desired_count = 3
# ecs_autoscaling_min_capacity = 2
# ecs_autoscaling_max_capacity = 20
# enable_nat_gateway = true
# db_deletion_protection = true
# alb_deletion_protection = true
# log_retention_in_days = 30
# db_backup_retention_period = 30
# db_monitoring_interval = 60
# domain_name = "myapp.com"
# ssl_certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"
# alert_email = "admin@myapp.com"