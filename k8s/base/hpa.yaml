apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: learning-assistant-hpa
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: learning-assistant
    app.kubernetes.io/instance: learning-assistant
    app.kubernetes.io/component: hpa
    app.kubernetes.io/part-of: learning-assistant
  annotations:
    kubernetes.io/description: "Horizontal Pod Autoscaler for Learning Assistant"
    autoscaling.alpha.kubernetes.io/conditions: '[{"type":"AbleToScale","status":"True","reason":"ReadyForNewScale"}]'
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: learning-assistant
  minReplicas: 3
  maxReplicas: 20
  metrics:
  # CPU utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  # Memory utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  # Custom metrics - Request rate
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  # Custom metrics - Response time
  - type: Pods
    pods:
      metric:
        name: http_request_duration_seconds
      target:
        type: AverageValue
        averageValue: "500m"  # 500ms
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 60
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: redis-hpa
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: redis
    app.kubernetes.io/component: hpa
    app.kubernetes.io/part-of: learning-assistant
  annotations:
    kubernetes.io/description: "Horizontal Pod Autoscaler for Redis (limited scaling)"
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: redis
  minReplicas: 1
  maxReplicas: 3  # Limited scaling for Redis
  metrics:
  # CPU utilization
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  # Memory utilization
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  # Custom metrics - Redis connections
  - type: Pods
    pods:
      metric:
        name: redis_connected_clients
      target:
        type: AverageValue
        averageValue: "100"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Pods
        value: 1
        periodSeconds: 120
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Pods
        value: 1
        periodSeconds: 300
      selectPolicy: Min
---
# Vertical Pod Autoscaler for PostgreSQL (since it doesn't scale horizontally well)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: postgres-vpa
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres
    app.kubernetes.io/component: vpa
    app.kubernetes.io/part-of: learning-assistant
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: postgres
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: postgres
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 2000m
        memory: 4Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits
---
# Pod Disruption Budget for High Availability
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: learning-assistant-pdb
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: learning-assistant
    app.kubernetes.io/instance: learning-assistant
    app.kubernetes.io/component: pdb
    app.kubernetes.io/part-of: learning-assistant
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: learning-assistant
      app.kubernetes.io/instance: learning-assistant
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: postgres-pdb
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres
    app.kubernetes.io/component: pdb
    app.kubernetes.io/part-of: learning-assistant
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: postgres
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: redis-pdb
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: redis
    app.kubernetes.io/component: pdb
    app.kubernetes.io/part-of: learning-assistant
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: redis