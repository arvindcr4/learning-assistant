apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: learning-assistant
    type: local
spec:
  storageClassName: fast-ssd
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /data/postgres
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: learning-assistant
  annotations:
    volume.beta.kubernetes.io/storage-class: "fast-ssd"
    backup.kubernetes.io/enabled: "true"
    backup.kubernetes.io/schedule: "0 2 * * *"
spec:
  storageClassName: fast-ssd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: redis-pv
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: learning-assistant
    type: local
spec:
  storageClassName: fast-ssd
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /data/redis
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/instance: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/part-of: learning-assistant
  annotations:
    volume.beta.kubernetes.io/storage-class: "fast-ssd"
    backup.kubernetes.io/enabled: "true"
    backup.kubernetes.io/schedule: "0 3 * * *"
spec:
  storageClassName: fast-ssd
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: app-logs-pv
  labels:
    app.kubernetes.io/name: learning-assistant
    app.kubernetes.io/instance: learning-assistant
    app.kubernetes.io/component: logs
    app.kubernetes.io/part-of: learning-assistant
    type: local
spec:
  storageClassName: standard
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /data/app-logs
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app-logs-pvc
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: learning-assistant
    app.kubernetes.io/instance: learning-assistant
    app.kubernetes.io/component: logs
    app.kubernetes.io/part-of: learning-assistant
  annotations:
    volume.beta.kubernetes.io/storage-class: "standard"
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  selector:
    matchLabels:
      app.kubernetes.io/name: learning-assistant
      app.kubernetes.io/component: logs
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: uploads-pv
  labels:
    app.kubernetes.io/name: learning-assistant
    app.kubernetes.io/instance: learning-assistant
    app.kubernetes.io/component: uploads
    app.kubernetes.io/part-of: learning-assistant
    type: local
spec:
  storageClassName: standard
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /data/uploads
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: uploads-pvc
  namespace: learning-assistant
  labels:
    app.kubernetes.io/name: learning-assistant
    app.kubernetes.io/instance: learning-assistant
    app.kubernetes.io/component: uploads
    app.kubernetes.io/part-of: learning-assistant
  annotations:
    volume.beta.kubernetes.io/storage-class: "standard"
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  selector:
    matchLabels:
      app.kubernetes.io/name: learning-assistant
      app.kubernetes.io/component: uploads
---
# Storage Classes
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: fast-ssd
  annotations:
    storageclass.kubernetes.io/is-default-class: "false"
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp3
  fsType: ext4
  encrypted: "true"
allowVolumeExpansion: true
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: standard
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  fsType: ext4
  encrypted: "true"
allowVolumeExpansion: true
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer