apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: learning-assistant-hpa
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: learning-assistant
  minReplicas: 3
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  - type: Object
    object:
      metric:
        name: requests_per_second
      describedObject:
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        name: learning-assistant-ingress
      target:
        type: Value
        value: "1000"
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
      - type: Pods
        value: 4
        periodSeconds: 60
      selectPolicy: Max
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: postgres-hpa
  namespace: learning-assistant
  labels:
    app: postgres
    component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: postgres
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 85
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Pods
        value: 1
        periodSeconds: 300
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 300
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: redis-hpa
  namespace: learning-assistant
  labels:
    app: redis
    component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: redis
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 75
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Pods
        value: 1
        periodSeconds: 180
    scaleUp:
      stabilizationWindowSeconds: 120
      policies:
      - type: Pods
        value: 2
        periodSeconds: 120
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: learning-assistant-pdb
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: disruption-budget
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: learning-assistant
      version: v1
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: postgres-pdb
  namespace: learning-assistant
  labels:
    app: postgres
    component: disruption-budget
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: postgres
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: redis-pdb
  namespace: learning-assistant
  labels:
    app: redis
    component: disruption-budget
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: redis
---
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: learning-assistant-vpa
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: vpa
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: learning-assistant
  updatePolicy:
    updateMode: "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: learning-assistant
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 2000m
        memory: 4Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits
    - containerName: nginx-sidecar
      minAllowed:
        cpu: 50m
        memory: 64Mi
      maxAllowed:
        cpu: 500m
        memory: 256Mi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: learning-assistant-keda
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: keda-scaling
spec:
  scaleTargetRef:
    name: learning-assistant
  pollingInterval: 30
  cooldownPeriod: 300
  idleReplicaCount: 2
  minReplicaCount: 3
  maxReplicaCount: 50
  triggers:
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-service:9090
      metricName: http_requests_per_second
      threshold: '100'
      query: sum(rate(http_requests_total{job="learning-assistant"}[1m]))
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-service:9090
      metricName: cpu_usage_percent
      threshold: '70'
      query: avg(rate(container_cpu_usage_seconds_total{pod=~"learning-assistant-.*"}[1m])) * 100
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-service:9090
      metricName: memory_usage_percent
      threshold: '80'
      query: avg(container_memory_working_set_bytes{pod=~"learning-assistant-.*"} / container_spec_memory_limit_bytes{pod=~"learning-assistant-.*"}) * 100
  - type: prometheus
    metadata:
      serverAddress: http://prometheus-service:9090
      metricName: response_time_p95
      threshold: '1000'
      query: histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket{job="learning-assistant"}[5m])) by (le)) * 1000
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: learning-assistant-circuit-breaker
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: circuit-breaker
spec:
  host: learning-assistant-service
  trafficPolicy:
    outlierDetection:
      consecutiveGatewayErrors: 5
      consecutive5xxErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 30
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30s
        tcpKeepalive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 1000
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
    loadBalancer:
      simple: LEAST_CONN
      consistentHash:
        httpHeaderName: "x-user-id"
    retryPolicy:
      attempts: 3
      perTryTimeout: 30s
      retryOn: gateway-error,connect-failure,refused-stream
      retryRemoteLocalities: false
---
apiVersion: v1
kind: ServiceMonitor
metadata:
  name: learning-assistant-monitor
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: monitoring
spec:
  selector:
    matchLabels:
      app: learning-assistant
  endpoints:
  - port: http
    path: /api/metrics
    interval: 30s
    scrapeTimeout: 10s
  - port: nginx
    path: /nginx_status
    interval: 30s
    scrapeTimeout: 10s