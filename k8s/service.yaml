apiVersion: v1
kind: Service
metadata:
  name: learning-assistant-service
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/api/metrics"
spec:
  type: ClusterIP
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  - port: 80
    targetPort: 80
    protocol: TCP
    name: nginx
  selector:
    app: learning-assistant
    version: v1
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: learning-assistant-headless
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: backend
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  selector:
    app: learning-assistant
    version: v1
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: learning-assistant
  labels:
    app: postgres
    component: database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  selector:
    app: postgres
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: learning-assistant
  labels:
    app: redis
    component: cache
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
    name: redis
  selector:
    app: redis
  sessionAffinity: None
---
apiVersion: v1
kind: Service
metadata:
  name: learning-assistant-lb
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: loadbalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-east-1:123456789:certificate/your-cert-id"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/api/health"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-interval: "30"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-timeout: "10"
    service.beta.kubernetes.io/aws-load-balancer-healthy-threshold: "2"
    service.beta.kubernetes.io/aws-load-balancer-unhealthy-threshold: "3"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 80
    protocol: TCP
    name: https
  selector:
    app: learning-assistant
    version: v1
  loadBalancerSourceRanges:
  - 0.0.0.0/0
---
apiVersion: v1
kind: Endpoints
metadata:
  name: learning-assistant-external-db
  namespace: learning-assistant
subsets:
- addresses:
  - ip: "10.0.1.100"  # External database IP
  ports:
  - port: 5432
    name: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: learning-assistant-external-db
  namespace: learning-assistant
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgres
  clusterIP: None