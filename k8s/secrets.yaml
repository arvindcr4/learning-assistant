apiVersion: v1
kind: Secret
metadata:
  name: learning-assistant-secrets
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: secrets
type: Opaque
stringData:
  # Database configuration (replace with actual values)
  DATABASE_URL: "postgresql://username:password@postgres-service:5432/learning_assistant"
  DATABASE_USER: "learning_assistant_user"
  DATABASE_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"
  DATABASE_NAME: "learning_assistant"
  
  # Redis configuration
  REDIS_URL: "redis://redis-service:6379"
  REDIS_PASSWORD: "REPLACE_WITH_ACTUAL_PASSWORD"
  
  # JWT and authentication secrets
  JWT_SECRET: "REPLACE_WITH_ACTUAL_JWT_SECRET"
  NEXTAUTH_SECRET: "REPLACE_WITH_ACTUAL_NEXTAUTH_SECRET"
  NEXTAUTH_URL: "https://learning-assistant.example.com"
  
  # Encryption keys
  ENCRYPTION_KEY: "REPLACE_WITH_ACTUAL_ENCRYPTION_KEY"
  API_KEY_SALT: "REPLACE_WITH_ACTUAL_SALT"
  
  # Third-party service keys
  OPENAI_API_KEY: "REPLACE_WITH_ACTUAL_OPENAI_KEY"
  GOOGLE_CLIENT_ID: "REPLACE_WITH_ACTUAL_CLIENT_ID"
  GOOGLE_CLIENT_SECRET: "REPLACE_WITH_ACTUAL_CLIENT_SECRET"
  
  # Monitoring and logging
  SENTRY_DSN: "REPLACE_WITH_ACTUAL_SENTRY_DSN"
  DATADOG_API_KEY: "REPLACE_WITH_ACTUAL_DATADOG_KEY"
  NEW_RELIC_LICENSE_KEY: "REPLACE_WITH_ACTUAL_NEWRELIC_KEY"
  
  # Email service
  SMTP_HOST: "smtp.example.com"
  SMTP_PORT: "587"
  SMTP_USER: "REPLACE_WITH_ACTUAL_SMTP_USER"
  SMTP_PASSWORD: "REPLACE_WITH_ACTUAL_SMTP_PASSWORD"
  
  # Storage
  AWS_ACCESS_KEY_ID: "REPLACE_WITH_ACTUAL_AWS_KEY"
  AWS_SECRET_ACCESS_KEY: "REPLACE_WITH_ACTUAL_AWS_SECRET"
  AWS_REGION: "us-east-1"
  AWS_S3_BUCKET: "learning-assistant-storage"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secrets
  namespace: learning-assistant
  labels:
    app: postgres
    component: database
type: Opaque
stringData:
  POSTGRES_DB: "learning_assistant"
  POSTGRES_USER: "learning_assistant_user"
  POSTGRES_PASSWORD: "REPLACE_WITH_ACTUAL_POSTGRES_PASSWORD"
  POSTGRES_REPLICATION_USER: "replicator"
  POSTGRES_REPLICATION_PASSWORD: "REPLACE_WITH_ACTUAL_REPLICATION_PASSWORD"
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secrets
  namespace: learning-assistant
  labels:
    app: redis
    component: cache
type: Opaque
stringData:
  REDIS_PASSWORD: "REPLACE_WITH_ACTUAL_REDIS_PASSWORD"
  REDIS_AUTH: "REPLACE_WITH_ACTUAL_REDIS_AUTH"
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-certificates
  namespace: learning-assistant
  labels:
    app: learning-assistant
    component: tls
type: kubernetes.io/tls
stringData:
  tls.crt: |
    -----BEGIN CERTIFICATE-----
    # REPLACE WITH ACTUAL TLS CERTIFICATE
    -----END CERTIFICATE-----
  tls.key: |
    -----BEGIN PRIVATE KEY-----
    # REPLACE WITH ACTUAL TLS PRIVATE KEY
    -----END PRIVATE KEY-----
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: vault-backend
  namespace: learning-assistant
spec:
  provider:
    vault:
      server: "https://vault.example.com"
      path: "secret"
      version: "v2"
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "learning-assistant"
          serviceAccountRef:
            name: "learning-assistant-vault-sa"
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: learning-assistant-external-secrets
  namespace: learning-assistant
spec:
  refreshInterval: 300s
  secretStoreRef:
    name: vault-backend
    kind: SecretStore
  target:
    name: learning-assistant-vault-secrets
    creationPolicy: Owner
  data:
  - secretKey: database-password
    remoteRef:
      key: learning-assistant/database
      property: password
  - secretKey: jwt-secret
    remoteRef:
      key: learning-assistant/auth
      property: jwt-secret
  - secretKey: openai-api-key
    remoteRef:
      key: learning-assistant/ai
      property: openai-key
  - secretKey: encryption-key
    remoteRef:
      key: learning-assistant/security
      property: encryption-key