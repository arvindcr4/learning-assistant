# Docker logging configuration for Learning Assistant
# This file configures logging for containerized deployments

# =============================================================================
# Container Logging Driver Configuration
# =============================================================================

# Default logging driver (json-file for local development)
driver = "json-file"

# Logging options
[logging]
  driver = "json-file"
  options = {
    max-size = "20m"
    max-file = "3"
    labels = "service,environment"
    env = "NODE_ENV,LOG_LEVEL"
  }

# =============================================================================
# Production Logging Configuration
# =============================================================================

# For production deployments, use centralized logging
[logging.production]
  driver = "syslog"
  options = {
    syslog-address = "tcp://your-syslog-server:514"
    tag = "learning-assistant-{{.Name}}"
    syslog-facility = "daemon"
    labels = "service,environment,container_name"
    env = "NODE_ENV,LOG_LEVEL,CORRELATION_ID"
  }

# Alternative: JSON logging for log aggregation services
[logging.production-json]
  driver = "json-file"
  options = {
    max-size = "50m"
    max-file = "5"
    compress = "true"
    labels = "service,environment,container_name,version"
    env = "NODE_ENV,LOG_LEVEL,CORRELATION_ID,DEPLOYMENT_ID"
  }

# =============================================================================
# Fluentd Configuration (for log aggregation)
# =============================================================================

[logging.fluentd]
  driver = "fluentd"
  options = {
    fluentd-address = "your-fluentd-server:24224"
    tag = "learning-assistant.{{.Name}}"
    labels = "service,environment,container_name"
    env = "NODE_ENV,LOG_LEVEL,CORRELATION_ID"
    fluentd-buffer-limit = "1mb"
    fluentd-retry-wait = "1s"
    fluentd-max-retries = "3"
  }

# =============================================================================
# GELF Configuration (for Graylog/ELK)
# =============================================================================

[logging.gelf]
  driver = "gelf"
  options = {
    gelf-address = "udp://your-graylog-server:12201"
    tag = "learning-assistant"
    labels = "service,environment,container_name"
    env = "NODE_ENV,LOG_LEVEL,CORRELATION_ID"
  }

# =============================================================================
# Splunk Configuration
# =============================================================================

[logging.splunk]
  driver = "splunk"
  options = {
    splunk-url = "https://your-splunk-instance:8088"
    splunk-token = "your-splunk-token"
    splunk-index = "learning-assistant"
    splunk-source = "docker:learning-assistant"
    splunk-sourcetype = "_json"
    tag = "{{.Name}}"
    labels = "service,environment,container_name"
    env = "NODE_ENV,LOG_LEVEL,CORRELATION_ID"
  }

# =============================================================================
# AWS CloudWatch Configuration
# =============================================================================

[logging.awslogs]
  driver = "awslogs"
  options = {
    awslogs-group = "/aws/ecs/learning-assistant"
    awslogs-region = "us-west-2"
    awslogs-stream-prefix = "ecs"
    awslogs-create-group = "true"
    tag = "{{.Name}}"
  }

# =============================================================================
# Google Cloud Logging Configuration
# =============================================================================

[logging.gcplogs]
  driver = "gcplogs"
  options = {
    gcp-project = "your-gcp-project"
    gcp-log-cmd = "true"
    labels = "service,environment,container_name"
    env = "NODE_ENV,LOG_LEVEL,CORRELATION_ID"
  }

# =============================================================================
# Local Development Configuration
# =============================================================================

[logging.development]
  driver = "json-file"
  options = {
    max-size = "10m"
    max-file = "2"
    labels = "service,environment"
    env = "NODE_ENV,LOG_LEVEL"
  }

# =============================================================================
# Log Rotation Settings
# =============================================================================

[rotation]
  enabled = true
  max_size = "20m"
  max_files = 5
  compress = true
  cleanup_interval = "24h"

# =============================================================================
# Log Filtering and Sampling
# =============================================================================

[filtering]
  # Filter out noisy logs
  exclude_patterns = [
    ".*health.*check.*",
    ".*favicon.ico.*",
    ".*robots.txt.*"
  ]
  
  # Log level filtering
  min_level = "info"
  
  # Sampling rate for high-volume logs
  sample_rate = 0.1

# =============================================================================
# Security and Privacy Settings
# =============================================================================

[security]
  # Mask sensitive data in logs
  mask_patterns = [
    "password",
    "token",
    "secret",
    "key",
    "authorization"
  ]
  
  # Enable log encryption
  encrypt_logs = true
  encryption_key_id = "log-encryption-key"

# =============================================================================
# Performance Settings
# =============================================================================

[performance]
  # Buffer settings
  buffer_size = "1mb"
  flush_interval = "5s"
  
  # Async logging
  async_mode = true
  
  # Compression
  compress_logs = true
  compression_algorithm = "gzip"

# =============================================================================
# Monitoring and Alerting
# =============================================================================

[monitoring]
  # Enable log monitoring
  enabled = true
  
  # Alert thresholds
  error_rate_threshold = 10  # errors per minute
  log_volume_threshold = 1000  # MB per hour
  
  # Health check endpoint
  health_check_path = "/health/logging"
  
  # Metrics endpoint
  metrics_path = "/metrics/logging"