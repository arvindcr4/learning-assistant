# Example Terraform variables file for Learning Assistant GCP Infrastructure
# Copy this file to terraform.tfvars and customize the values for your environment

# Project and Region Configuration
project_id = "your-gcp-project-id"
region     = "us-central1"
zone       = "us-central1-a"
environment = "prod"  # Options: dev, staging, prod

# Domain and DNS Configuration
domain_name = "learning-assistant.com"
subdomain   = "app"

# VPC Configuration
vpc_cidr            = "10.0.0.0/16"
private_subnet_cidr = "10.0.1.0/24"
public_subnet_cidr  = "10.0.2.0/24"

# GKE Configuration
gke_cluster_name        = "learning-assistant-cluster"
gke_node_count         = 3
gke_min_node_count     = 1
gke_max_node_count     = 10
gke_node_machine_type  = "e2-standard-4"
gke_disk_size          = 100
gke_kubernetes_version = "1.28"

# Cloud SQL Configuration
db_instance_name         = "learning-assistant-db"
db_version              = "POSTGRES_15"
db_tier                 = "db-custom-4-16384"
db_disk_size            = 100
db_disk_type            = "PD_SSD"
db_backup_enabled       = true
db_backup_start_time    = "02:00"
db_backup_retention_days = 7

# Redis Configuration
redis_instance_name = "learning-assistant-redis"
redis_tier         = "STANDARD_HA"
redis_memory_size  = 4
redis_version      = "REDIS_7_0"

# Load Balancer Configuration
ssl_certificate_name = "learning-assistant-ssl-cert"

# Monitoring Configuration
notification_email = "admin@learning-assistant.com"
enable_monitoring  = true

# Resource Labels
labels = {
  project      = "learning-assistant"
  environment  = "production"
  team         = "platform"
  cost_center  = "engineering"
  managed_by   = "terraform"
  owner        = "platform-team"
  backup       = "daily"
  compliance   = "required"
}

# Security Configuration
enable_network_policy = true
enable_private_nodes  = true

# Authorized networks for GKE master access
# Replace with your actual IP ranges
authorized_networks = [
  {
    cidr_block   = "203.0.113.0/24"  # Your office IP range
    display_name = "Office Network"
  },
  {
    cidr_block   = "198.51.100.0/24" # Your VPN IP range
    display_name = "VPN Network"
  }
]

# Cost Optimization
enable_node_auto_repair  = true
enable_node_auto_upgrade = true
preemptible_nodes       = false  # Set to true for cost savings in non-prod

# Application Configuration
app_image    = "gcr.io/your-project-id/learning-assistant:latest"
app_replicas = 3

# Backup Configuration
backup_schedule        = "0 2 * * *"  # Daily at 2 AM UTC
backup_retention_days  = 30

# Development Environment Example
# Uncomment and modify for development environment

# project_id = "your-dev-project-id"
# environment = "dev"
# gke_node_count = 1
# gke_min_node_count = 1
# gke_max_node_count = 3
# gke_node_machine_type = "e2-medium"
# db_tier = "db-f1-micro"
# redis_tier = "BASIC"
# redis_memory_size = 1
# preemptible_nodes = true
# db_backup_retention_days = 3
# backup_retention_days = 7

# Staging Environment Example
# Uncomment and modify for staging environment

# project_id = "your-staging-project-id"
# environment = "staging"
# gke_node_count = 2
# gke_min_node_count = 1
# gke_max_node_count = 5
# gke_node_machine_type = "e2-standard-2"
# db_tier = "db-custom-2-8192"
# redis_memory_size = 2
# preemptible_nodes = false
# db_backup_retention_days = 5
# backup_retention_days = 14

# Production Environment (High Availability)
# Uncomment and modify for production with high availability

# project_id = "your-prod-project-id"
# environment = "prod"
# region = "us-central1"
# gke_node_count = 5
# gke_min_node_count = 3
# gke_max_node_count = 20
# gke_node_machine_type = "e2-standard-8"
# gke_disk_size = 200
# db_tier = "db-custom-8-32768"
# db_disk_size = 500
# redis_tier = "STANDARD_HA"
# redis_memory_size = 8
# preemptible_nodes = false
# db_backup_retention_days = 30
# backup_retention_days = 90
# enable_monitoring = true

# Multi-Region Setup (for global applications)
# Note: This requires additional configuration not covered in this example

# primary_region = "us-central1"
# secondary_region = "europe-west1"
# asia_region = "asia-southeast1"

# Advanced Security Configuration
# Uncomment for enhanced security in production

# enable_binary_authorization = true
# enable_pod_security_policy = true
# enable_network_policy = true
# enable_private_cluster = true
# enable_master_authorized_networks = true
# enable_workload_identity = true
# enable_shielded_nodes = true

# Compliance and Governance
# Uncomment for compliance requirements

# enable_audit_logging = true
# enable_vpc_flow_logs = true
# enable_firewall_logs = true
# log_retention_days = 365
# enable_data_loss_prevention = true
# enable_access_transparency = true

# Performance and Scaling
# Uncomment for high-performance requirements

# enable_horizontal_pod_autoscaling = true
# enable_vertical_pod_autoscaling = true
# enable_cluster_autoscaling = true
# enable_node_auto_provisioning = true
# max_pods_per_node = 110
# enable_ip_alias = true
# enable_network_policy = true

# Disaster Recovery
# Uncomment for disaster recovery setup

# enable_cross_region_backups = true
# backup_regions = ["us-west1", "europe-west1"]
# rpo_hours = 4  # Recovery Point Objective
# rto_hours = 2  # Recovery Time Objective

# Cost Management
# Uncomment for cost optimization

# enable_preemptible_nodes = true
# preemptible_node_percentage = 50
# enable_committed_use_discounts = true
# enable_sustained_use_discounts = true
# enable_rightsizing_recommendations = true